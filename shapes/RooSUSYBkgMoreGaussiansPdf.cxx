 /***************************************************************************** 
  * Project: RooFit                                                           * 
  *                                                                           * 
  * This code was autogenerated by RooClassFactory                            * 
  *****************************************************************************/ 

 // Your description goes here... 

 #include "Riostream.h" 

 #include "RooSUSYBkgMoreGaussiansPdf.h" 
 #include "RooAbsReal.h" 
 #include "RooAbsCategory.h"
 #include "TMath.h"

 ClassImp(RooSUSYBkgMoreGaussiansPdf) 

 RooSUSYBkgMoreGaussiansPdf::RooSUSYBkgMoreGaussiansPdf(const char *name, const char *title, 
                        RooAbsReal& _inv,
                        RooAbsReal& _a1,
                        RooAbsReal& _a2,
                        RooAbsReal& _a3,
                        RooAbsReal& _a4,
                        RooAbsReal& _b1,
                        RooAbsReal& _b2,
                        RooAbsReal& _b3,
                        RooAbsReal& _b4) :
   RooAbsPdf(name,title), 
   inv("inv","inv",this,_inv),
   a1("a1","a1",this,_a1),
   a2("a2","a2",this,_a2),
   a3("a3","a3",this,_a3),
   a4("a4","a4",this,_a4),
   b1("b1","b1",this,_b1),
   b2("b2","b2",this,_b2),
   b3("b3","b3",this,_b3),
   b4("b4","b4",this,_b4)
 { 
 } 


 RooSUSYBkgMoreGaussiansPdf::RooSUSYBkgMoreGaussiansPdf(const RooSUSYBkgMoreGaussiansPdf& other, const char* name) :  
   RooAbsPdf(other,name), 
   inv("inv",this,other.inv),
   a1("a1",this,other.a1),
   a2("a2",this,other.a2),
   a3("a3",this,other.a3),
   a4("a4",this,other.a4),
   b1("b1",this,other.b1),
   b2("b2",this,other.b2),
   b3("b3",this,other.b3),
   b4("b4",this,other.b4)
 { 
 } 



 Double_t RooSUSYBkgMoreGaussiansPdf::evaluate() const 
 { 
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE 
   //~ return TMath::Power(inv,a1)*TMath::Exp(-b1*inv);//+TMath::Power(inv,a2)*TMath::Exp(-b2*inv);
   Double_t peak1 = TMath::Gaus((inv - a1), a1, b1);
   Double_t peak2 = TMath::Gaus((inv - a2), a2, b2);
   Double_t peak3 = TMath::Gaus((inv - a3), a3, b3);
   Double_t peak4 = TMath::Gaus((inv - a4), a3, b4);
   //~ Double_t peak3 = TMath::Power(inv,a3)*TMath::Exp(-b3*inv);
   return  peak1 + peak2 + peak3+ peak4;
 } 



